SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE SCHEMA IF NOT EXISTS `forest`;
USE `forest`;
CREATE TABLE IF NOT EXISTS `forest`.`CATEGORY` (`ID` INT NOT NULL AUTO_INCREMENT,`NAME` VARCHAR(45) NOT NULL,`TAGS` VARCHAR(45) NULL,PRIMARY KEY (`ID`));
CREATE TABLE IF NOT EXISTS `forest`.`PERSON` (`ID` INT NOT NULL AUTO_INCREMENT,`FIRSTNAME` VARCHAR(50) NOT NULL,`LASTNAME` VARCHAR(100) NOT NULL,`EMAIL` VARCHAR(45) NOT NULL,`ADDRESS` VARCHAR(45) NOT NULL,`CITY` VARCHAR(45) NOT NULL,`PASSWORD` VARCHAR(100) NULL,`DTYPE` VARCHAR(31) NULL DEFAULT NULL,PRIMARY KEY (`ID`),UNIQUE INDEX `SQL_PERSON_EMAIL_INDEX` (`EMAIL` ASC));
CREATE TABLE IF NOT EXISTS `forest`.`GROUPS` (`ID` INT NOT NULL AUTO_INCREMENT,`NAME` VARCHAR(50) NOT NULL,`DESCRIPTION` VARCHAR(300) NULL,PRIMARY KEY (`ID`));
CREATE TABLE IF NOT EXISTS `forest`.`PERSON_GROUPS` (`GROUPS_ID` INT NOT NULL,`EMAIL` VARCHAR(45) NOT NULL,INDEX `sql_persongroups_email_index` (`EMAIL` ASC),INDEX `sql_persongroups_id_index` (`GROUPS_ID` ASC),CONSTRAINT `fx_person_groups_person`FOREIGN KEY (`EMAIL`)REFERENCES `forest`.`PERSON` (`EMAIL`),CONSTRAINT `fx_person_groups_groups`FOREIGN KEY (`GROUPS_ID`)REFERENCES `forest`.`GROUPS` (`ID`));
CREATE TABLE IF NOT EXISTS `forest`.`ORDER_STATUS` (`ID` INT NOT NULL AUTO_INCREMENT,`STATUS` VARCHAR(45) NOT NULL,`DESCRIPTION` VARCHAR(200) NULL,PRIMARY KEY (`ID`));
CREATE TABLE IF NOT EXISTS `forest`.`CUSTOMER_ORDER` (`ID` INT NOT NULL AUTO_INCREMENT,`AMOUNT` FLOAT(52) NOT NULL,`DATE_CREATED` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,`CUSTOMER_ID` INT NOT NULL,`STATUS_ID` INT NOT NULL,PRIMARY KEY (`ID`),INDEX `SQL_ORDER_STATUS_ID_INDEX` (`STATUS_ID` ASC),INDEX `SQL_ORDER_CUSTOMER_ID_INDEX` (`CUSTOMER_ID` ASC),CONSTRAINT `FK_CUSTOMER_ORDER_ORDER_STATUS1`FOREIGN KEY (`STATUS_ID`)REFERENCES `forest`.`ORDER_STATUS` (`ID`),CONSTRAINT `FK_CUSTOMER_ORDER_CUSTOMER1`FOREIGN KEY (`CUSTOMER_ID`)REFERENCES `forest`.`PERSON` (`ID`));
CREATE TABLE IF NOT EXISTS `forest`.`PRODUCT` (`ID` INT NOT NULL AUTO_INCREMENT,`NAME` VARCHAR(45) NOT NULL,`PRICE` DECIMAL(10,2) NOT NULL,`DESCRIPTION` VARCHAR(145) NOT NULL,`IMG` VARCHAR(45) NULL,`CATEGORY_ID` INT NOT NULL,`IMG_SRC` BLOB(1073741823) NULL,PRIMARY KEY (`ID`),INDEX `SQL_PRODUCT_CATEGORY_INDEX` (`CATEGORY_ID` ASC),CONSTRAINT `FK_PRODUCT_CATEGORY`FOREIGN KEY (`CATEGORY_ID`)REFERENCES `forest`.`CATEGORY` (`ID`));
CREATE TABLE IF NOT EXISTS `forest`.`ORDER_DETAIL` (`ORDER_ID` INT NOT NULL AUTO_INCREMENT,`PRODUCT_ID` INT NOT NULL,`QTY` INT NOT NULL,PRIMARY KEY (`ORDER_ID`, `PRODUCT_ID`),INDEX `SQL_ORDER_PRODUCT_ID_INDEX` (`PRODUCT_ID` ASC),INDEX `SQL_ORDER_DETAIL_ID_INDEX` (`ORDER_ID` ASC),CONSTRAINT `FK_ORDER_DETAIL_PRODUCT`FOREIGN KEY (`PRODUCT_ID`)REFERENCES `forest`.`PRODUCT` (`ID`),CONSTRAINT `FK_ORDER_DETAIL_ORDER`FOREIGN KEY (`ORDER_ID`)REFERENCES `forest`.`CUSTOMER_ORDER` (`ID`));
SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;